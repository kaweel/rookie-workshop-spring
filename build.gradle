plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version "2.7"
}

group = 'com.kaweel'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'

//    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
//    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
//    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'org.apache.httpcomponents:httpclient:4.5.12'

    runtimeOnly 'com.h2database:h2'

}

test {
    useJUnitPlatform {
        excludeTags 'integration', 'basic'
    }
}

task basic(type: Test) {
    group = 'Custom task'
    description = 'Run all basic test'
    useJUnitPlatform {
        includeTags 'basic'
    }
}

task integration(type: Test) {
    group = 'Custom task'
    description = 'Run all integration test'
    useJUnitPlatform {
        includeTags 'integration'
    }
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    dependsOn 'test'
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
